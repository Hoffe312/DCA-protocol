{"id":"a11bbccf7cea62d83bceba902ae7aec2","_format":"hh-sol-build-info-1","solcVersion":"0.8.16","solcLongVersion":"0.8.16+commit.07a7930e","input":{"language":"Solidity","sources":{"contracts/TimeLock.sol":{"content":"//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DCAProtocol {\n    //we mapped the address of the caller balance in the contract\n    mapping(address => uint) public balances;\n\n    // whatever the user deposit is added to msg.value of the sender address we mapped above\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    //we create the fucntion of witdraw\n    function withdraw(uint _amount) public {\n        //we create a require arg to make sure the balance of the sender is >= _amount if not ERR\n        require(balances[msg.sender] >= _amount, \"Not enough ether\");\n        //if the amount is availabe we subtract it from the sender\n        balances[msg.sender] -= _amount;\n        //True bool is called to confirm the amount\n        (bool sent, ) = msg.sender.call{value: _amount}(\"Sent\");\n        require(sent, \"failed to send ETH\");\n    }\n\n    function getBal() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[134],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":135,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,134],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"111:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"Context","nameLocation":"626:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"702:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:1","memberName":"sender","nodeType":"MemberAccess","src":"719:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"712:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"659:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"693:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:1"},"scope":134,"src":"640:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"809:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:1","memberName":"data","nodeType":"MemberAccess","src":"826:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"819:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"759:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"793:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:1"},"scope":134,"src":"742:99:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":135,"src":"608:235:1","usedErrors":[]}],"src":"86:758:1"},"id":1},"contracts/TimeLock.sol":{"ast":{"absolutePath":"contracts/TimeLock.sol","exportedSymbols":{"Context":[134],"DCAProtocol":[204],"Ownable":[112]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":205,"sourceUnit":113,"src":"58:52:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DCAProtocol","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":204,"linearizedBaseContracts":[204],"name":"DCAProtocol","nameLocation":"121:11:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"27e235e3","id":141,"mutability":"mutable","name":"balances","nameLocation":"237:8:2","nodeType":"VariableDeclaration","scope":204,"src":"205:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":140,"keyType":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"205:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":139,"name":"uint","nodeType":"ElementaryTypeName","src":"224:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":152,"nodeType":"Block","src":"379:50:2","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":144,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"389:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":147,"indexExpression":{"expression":{"id":145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"398:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"402:6:2","memberName":"sender","nodeType":"MemberAccess","src":"398:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"389:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":148,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"413:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"417:5:2","memberName":"value","nodeType":"MemberAccess","src":"413:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"389:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":151,"nodeType":"ExpressionStatement","src":"389:33:2"}]},"functionSelector":"d0e30db0","id":153,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"354:7:2","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"361:2:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"379:0:2"},"scope":204,"src":"345:84:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":190,"nodeType":"Block","src":"514:445:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":159,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"630:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":162,"indexExpression":{"expression":{"id":160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"639:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"643:6:2","memberName":"sender","nodeType":"MemberAccess","src":"639:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"630:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":163,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"654:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"630:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768206574686572","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"663:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10","typeString":"literal_string \"Not enough ether\""},"value":"Not enough ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10","typeString":"literal_string \"Not enough ether\""}],"id":158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"622:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"622:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":167,"nodeType":"ExpressionStatement","src":"622:60:2"},{"expression":{"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":168,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"759:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":171,"indexExpression":{"expression":{"id":169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"768:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"772:6:2","memberName":"sender","nodeType":"MemberAccess","src":"768:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"759:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":172,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"783:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"759:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":174,"nodeType":"ExpressionStatement","src":"759:31:2"},{"assignments":[176,null],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"sent","nameLocation":"858:4:2","nodeType":"VariableDeclaration","scope":190,"src":"853:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":175,"name":"bool","nodeType":"ElementaryTypeName","src":"853:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":184,"initialValue":{"arguments":[{"hexValue":"53656e74","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"900:6:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a","typeString":"literal_string \"Sent\""},"value":"Sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a","typeString":"literal_string \"Sent\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a","typeString":"literal_string \"Sent\""}],"expression":{"expression":{"id":177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"868:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"872:6:2","memberName":"sender","nodeType":"MemberAccess","src":"868:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"879:4:2","memberName":"call","nodeType":"MemberAccess","src":"868:15:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":180,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"891:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"868:31:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"868:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"852:55:2"},{"expression":{"arguments":[{"id":186,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"925:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f2073656e6420455448","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"931:20:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da","typeString":"literal_string \"failed to send ETH\""},"value":"failed to send ETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da","typeString":"literal_string \"failed to send ETH\""}],"id":185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"917:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"917:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"917:35:2"}]},"functionSelector":"2e1a7d4d","id":191,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"484:8:2","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"_amount","nameLocation":"498:7:2","nodeType":"VariableDeclaration","scope":191,"src":"493:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint","nodeType":"ElementaryTypeName","src":"493:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"492:14:2"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"514:0:2"},"scope":204,"src":"475:484:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":202,"nodeType":"Block","src":"1010:45:2","statements":[{"expression":{"expression":{"arguments":[{"id":198,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1035:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_DCAProtocol_$204","typeString":"contract DCAProtocol"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DCAProtocol_$204","typeString":"contract DCAProtocol"}],"id":197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1027:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:2","typeDescriptions":{}}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1027:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1041:7:2","memberName":"balance","nodeType":"MemberAccess","src":"1027:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":195,"id":201,"nodeType":"Return","src":"1020:28:2"}]},"functionSelector":"25caa262","id":203,"implemented":true,"kind":"function","modifiers":[],"name":"getBal","nameLocation":"974:6:2","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"980:2:2"},"returnParameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":203,"src":"1004:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint","nodeType":"ElementaryTypeName","src":"1004:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:6:2"},"scope":204,"src":"965:90:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":205,"src":"112:945:2","usedErrors":[]}],"src":"32:1026:2"},"id":2}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TimeLock.sol":{"DCAProtocol":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061061b806100206000396000f3fe60806040526004361061003f5760003560e01c806325caa2621461004457806327e235e31461006f5780632e1a7d4d146100ac578063d0e30db0146100d5575b600080fd5b34801561005057600080fd5b506100596100df565b60405161006691906102f5565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610373565b6100e7565b6040516100a391906102f5565b60405180910390f35b3480156100b857600080fd5b506100d360048036038101906100ce91906103cc565b6100ff565b005b6100dd610285565b005b600047905090565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017790610456565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ce91906104a5565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516101fb90610530565b60006040518083038185875af1925050503d8060008114610238576040519150601f19603f3d011682016040523d82523d6000602084013e61023d565b606091505b5050905080610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610591565b60405180910390fd5b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d391906105b1565b92505081905550565b6000819050919050565b6102ef816102dc565b82525050565b600060208201905061030a60008301846102e6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034082610315565b9050919050565b61035081610335565b811461035b57600080fd5b50565b60008135905061036d81610347565b92915050565b60006020828403121561038957610388610310565b5b60006103978482850161035e565b91505092915050565b6103a9816102dc565b81146103b457600080fd5b50565b6000813590506103c6816103a0565b92915050565b6000602082840312156103e2576103e1610310565b5b60006103f0848285016103b7565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b60006104406010836103f9565b915061044b8261040a565b602082019050919050565b6000602082019050818103600083015261046f81610433565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104b0826102dc565b91506104bb836102dc565b92508282039050818111156104d3576104d2610476565b5b92915050565b600081905092915050565b7f53656e7400000000000000000000000000000000000000000000000000000000600082015250565b600061051a6004836104d9565b9150610525826104e4565b600482019050919050565b600061053b8261050d565b9150819050919050565b7f6661696c656420746f2073656e64204554480000000000000000000000000000600082015250565b600061057b6012836103f9565b915061058682610545565b602082019050919050565b600060208201905081810360008301526105aa8161056e565b9050919050565b60006105bc826102dc565b91506105c7836102dc565b92508282019050808211156105df576105de610476565b5b9291505056fea2646970667358221220066e2b598c34e44de682b4b48b9278552387b5720dc934835896bfcc97ffa1c064736f6c63430008100033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25CAA262 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x3CC JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF DUP2 PUSH2 0x2DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340 DUP3 PUSH2 0x315 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x350 DUP2 PUSH2 0x335 JUMP JUMPDEST DUP2 EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH2 0x388 PUSH2 0x310 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP5 DUP3 DUP6 ADD PUSH2 0x35E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x2DC JUMP JUMPDEST DUP2 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C6 DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3E1 PUSH2 0x310 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F0 DUP5 DUP3 DUP6 ADD PUSH2 0x3B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440 PUSH1 0x10 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x44B DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F DUP2 PUSH2 0x433 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP3 PUSH2 0x2DC JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB DUP4 PUSH2 0x2DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH2 0x4D2 PUSH2 0x476 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x4 DUP4 PUSH2 0x4D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x525 DUP3 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E64204554480000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B PUSH1 0x12 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x586 DUP3 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AA DUP2 PUSH2 0x56E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BC DUP3 PUSH2 0x2DC JUMP JUMPDEST SWAP2 POP PUSH2 0x5C7 DUP4 PUSH2 0x2DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH2 0x476 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH15 0x2B598C34E44DE682B4B48B92785523 DUP8 0xB5 PUSH19 0xDC934835896BFCC97FFA1C064736F6C634300 ADDMOD LT STOP CALLER ","sourceMap":"112:945:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@balances_141":{"entryPoint":231,"id":141,"parameterSlots":0,"returnSlots":0},"@deposit_153":{"entryPoint":645,"id":153,"parameterSlots":0,"returnSlots":0},"@getBal_203":{"entryPoint":223,"id":203,"parameterSlots":0,"returnSlots":1},"@withdraw_191":{"entryPoint":255,"id":191,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":972,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10_to_t_string_memory_ptr_fromStack":{"entryPoint":1075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da_to_t_string_memory_ptr_fromStack":{"entryPoint":1390,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":742,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1328,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":757,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1241,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1017,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1457,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":789,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":732,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1142,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":784,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10":{"entryPoint":1034,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da":{"entryPoint":1349,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a":{"entryPoint":1252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":839,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":928,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6016:3","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:3","statements":[{"nodeType":"YulAssignment","src":"62:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:3","type":""}],"src":"7:77:3"},{"body":{"nodeType":"YulBlock","src":"155:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:3"},"nodeType":"YulFunctionCall","src":"177:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:3"},"nodeType":"YulFunctionCall","src":"165:37:3"},"nodeType":"YulExpressionStatement","src":"165:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:3","type":""}],"src":"90:118:3"},{"body":{"nodeType":"YulBlock","src":"312:124:3","statements":[{"nodeType":"YulAssignment","src":"322:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:3"},"nodeType":"YulFunctionCall","src":"330:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:3"},"nodeType":"YulFunctionCall","src":"411:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:3"},"nodeType":"YulFunctionCall","src":"358:71:3"},"nodeType":"YulExpressionStatement","src":"358:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:3","type":""}],"src":"214:222:3"},{"body":{"nodeType":"YulBlock","src":"482:35:3","statements":[{"nodeType":"YulAssignment","src":"492:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:3"},"nodeType":"YulFunctionCall","src":"502:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:3","type":""}],"src":"442:75:3"},{"body":{"nodeType":"YulBlock","src":"612:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:3"},"nodeType":"YulFunctionCall","src":"622:12:3"},"nodeType":"YulExpressionStatement","src":"622:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:3"},{"body":{"nodeType":"YulBlock","src":"735:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:3"},"nodeType":"YulFunctionCall","src":"745:12:3"},"nodeType":"YulExpressionStatement","src":"745:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:3"},{"body":{"nodeType":"YulBlock","src":"814:81:3","statements":[{"nodeType":"YulAssignment","src":"824:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"839:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"846:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"835:3:3"},"nodeType":"YulFunctionCall","src":"835:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"824:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"796:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"806:7:3","type":""}],"src":"769:126:3"},{"body":{"nodeType":"YulBlock","src":"946:51:3","statements":[{"nodeType":"YulAssignment","src":"956:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"967:17:3"},"nodeType":"YulFunctionCall","src":"967:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"956:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"928:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"938:7:3","type":""}],"src":"901:96:3"},{"body":{"nodeType":"YulBlock","src":"1046:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1103:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1112:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1115:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1105:6:3"},"nodeType":"YulFunctionCall","src":"1105:12:3"},"nodeType":"YulExpressionStatement","src":"1105:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1094:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1076:17:3"},"nodeType":"YulFunctionCall","src":"1076:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1066:2:3"},"nodeType":"YulFunctionCall","src":"1066:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1059:6:3"},"nodeType":"YulFunctionCall","src":"1059:43:3"},"nodeType":"YulIf","src":"1056:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1039:5:3","type":""}],"src":"1003:122:3"},{"body":{"nodeType":"YulBlock","src":"1183:87:3","statements":[{"nodeType":"YulAssignment","src":"1193:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1215:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1202:12:3"},"nodeType":"YulFunctionCall","src":"1202:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1193:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1231:26:3"},"nodeType":"YulFunctionCall","src":"1231:33:3"},"nodeType":"YulExpressionStatement","src":"1231:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1161:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1169:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1177:5:3","type":""}],"src":"1131:139:3"},{"body":{"nodeType":"YulBlock","src":"1342:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"1388:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1390:77:3"},"nodeType":"YulFunctionCall","src":"1390:79:3"},"nodeType":"YulExpressionStatement","src":"1390:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1359:3:3"},"nodeType":"YulFunctionCall","src":"1359:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1384:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1355:3:3"},"nodeType":"YulFunctionCall","src":"1355:32:3"},"nodeType":"YulIf","src":"1352:119:3"},{"nodeType":"YulBlock","src":"1481:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1496:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1510:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1500:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1525:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1560:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1571:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1556:3:3"},"nodeType":"YulFunctionCall","src":"1556:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1580:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1535:20:3"},"nodeType":"YulFunctionCall","src":"1535:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1525:6:3"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1312:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1323:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1335:6:3","type":""}],"src":"1276:329:3"},{"body":{"nodeType":"YulBlock","src":"1654:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:3"},"nodeType":"YulFunctionCall","src":"1713:12:3"},"nodeType":"YulExpressionStatement","src":"1713:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1684:17:3"},"nodeType":"YulFunctionCall","src":"1684:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:3"},"nodeType":"YulFunctionCall","src":"1674:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:3"},"nodeType":"YulFunctionCall","src":"1667:43:3"},"nodeType":"YulIf","src":"1664:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:3","type":""}],"src":"1611:122:3"},{"body":{"nodeType":"YulBlock","src":"1791:87:3","statements":[{"nodeType":"YulAssignment","src":"1801:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:3"},"nodeType":"YulFunctionCall","src":"1810:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1839:26:3"},"nodeType":"YulFunctionCall","src":"1839:33:3"},"nodeType":"YulExpressionStatement","src":"1839:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:3","type":""}],"src":"1739:139:3"},{"body":{"nodeType":"YulBlock","src":"1950:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"1996:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1998:77:3"},"nodeType":"YulFunctionCall","src":"1998:79:3"},"nodeType":"YulExpressionStatement","src":"1998:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1971:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1967:3:3"},"nodeType":"YulFunctionCall","src":"1967:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1963:3:3"},"nodeType":"YulFunctionCall","src":"1963:32:3"},"nodeType":"YulIf","src":"1960:119:3"},{"nodeType":"YulBlock","src":"2089:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2118:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2108:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2133:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:3"},"nodeType":"YulFunctionCall","src":"2164:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2188:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2143:20:3"},"nodeType":"YulFunctionCall","src":"2143:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2133:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1920:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1931:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1943:6:3","type":""}],"src":"1884:329:3"},{"body":{"nodeType":"YulBlock","src":"2315:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2332:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"2337:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2325:6:3"},"nodeType":"YulFunctionCall","src":"2325:19:3"},"nodeType":"YulExpressionStatement","src":"2325:19:3"},{"nodeType":"YulAssignment","src":"2353:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2372:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2377:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2368:3:3"},"nodeType":"YulFunctionCall","src":"2368:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2353:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2287:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"2292:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2303:11:3","type":""}],"src":"2219:169:3"},{"body":{"nodeType":"YulBlock","src":"2500:60:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2522:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2530:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2518:3:3"},"nodeType":"YulFunctionCall","src":"2518:14:3"},{"hexValue":"4e6f7420656e6f756768206574686572","kind":"string","nodeType":"YulLiteral","src":"2534:18:3","type":"","value":"Not enough ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2511:6:3"},"nodeType":"YulFunctionCall","src":"2511:42:3"},"nodeType":"YulExpressionStatement","src":"2511:42:3"}]},"name":"store_literal_in_memory_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2492:6:3","type":""}],"src":"2394:166:3"},{"body":{"nodeType":"YulBlock","src":"2712:220:3","statements":[{"nodeType":"YulAssignment","src":"2722:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2788:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2793:2:3","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2729:58:3"},"nodeType":"YulFunctionCall","src":"2729:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2722:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2894:3:3"}],"functionName":{"name":"store_literal_in_memory_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10","nodeType":"YulIdentifier","src":"2805:88:3"},"nodeType":"YulFunctionCall","src":"2805:93:3"},"nodeType":"YulExpressionStatement","src":"2805:93:3"},{"nodeType":"YulAssignment","src":"2907:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2918:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2923:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2914:3:3"},"nodeType":"YulFunctionCall","src":"2914:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2907:3:3"}]}]},"name":"abi_encode_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2700:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2708:3:3","type":""}],"src":"2566:366:3"},{"body":{"nodeType":"YulBlock","src":"3109:248:3","statements":[{"nodeType":"YulAssignment","src":"3119:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3131:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3142:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3127:3:3"},"nodeType":"YulFunctionCall","src":"3127:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3119:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3166:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3177:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3162:3:3"},"nodeType":"YulFunctionCall","src":"3162:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3185:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"3191:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3181:3:3"},"nodeType":"YulFunctionCall","src":"3181:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3155:6:3"},"nodeType":"YulFunctionCall","src":"3155:47:3"},"nodeType":"YulExpressionStatement","src":"3155:47:3"},{"nodeType":"YulAssignment","src":"3211:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3345:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3219:124:3"},"nodeType":"YulFunctionCall","src":"3219:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3211:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3089:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3104:4:3","type":""}],"src":"2938:419:3"},{"body":{"nodeType":"YulBlock","src":"3391:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3408:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3411:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3401:6:3"},"nodeType":"YulFunctionCall","src":"3401:88:3"},"nodeType":"YulExpressionStatement","src":"3401:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3505:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3508:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3498:6:3"},"nodeType":"YulFunctionCall","src":"3498:15:3"},"nodeType":"YulExpressionStatement","src":"3498:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3529:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3532:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3522:6:3"},"nodeType":"YulFunctionCall","src":"3522:15:3"},"nodeType":"YulExpressionStatement","src":"3522:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3363:180:3"},{"body":{"nodeType":"YulBlock","src":"3594:149:3","statements":[{"nodeType":"YulAssignment","src":"3604:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3627:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3609:17:3"},"nodeType":"YulFunctionCall","src":"3609:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3604:1:3"}]},{"nodeType":"YulAssignment","src":"3638:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3661:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3643:17:3"},"nodeType":"YulFunctionCall","src":"3643:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3638:1:3"}]},{"nodeType":"YulAssignment","src":"3672:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3684:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3687:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3680:3:3"},"nodeType":"YulFunctionCall","src":"3680:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3672:4:3"}]},{"body":{"nodeType":"YulBlock","src":"3714:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3716:16:3"},"nodeType":"YulFunctionCall","src":"3716:18:3"},"nodeType":"YulExpressionStatement","src":"3716:18:3"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"3705:4:3"},{"name":"x","nodeType":"YulIdentifier","src":"3711:1:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3702:2:3"},"nodeType":"YulFunctionCall","src":"3702:11:3"},"nodeType":"YulIf","src":"3699:37:3"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3580:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3583:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3589:4:3","type":""}],"src":"3549:194:3"},{"body":{"nodeType":"YulBlock","src":"3862:34:3","statements":[{"nodeType":"YulAssignment","src":"3872:18:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"3887:3:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3872:11:3"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3834:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"3839:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3850:11:3","type":""}],"src":"3749:147:3"},{"body":{"nodeType":"YulBlock","src":"4008:48:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4030:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4038:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4026:3:3"},"nodeType":"YulFunctionCall","src":"4026:14:3"},{"hexValue":"53656e74","kind":"string","nodeType":"YulLiteral","src":"4042:6:3","type":"","value":"Sent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:3"},"nodeType":"YulFunctionCall","src":"4019:30:3"},"nodeType":"YulExpressionStatement","src":"4019:30:3"}]},"name":"store_literal_in_memory_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4000:6:3","type":""}],"src":"3902:154:3"},{"body":{"nodeType":"YulBlock","src":"4225:235:3","statements":[{"nodeType":"YulAssignment","src":"4235:90:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4318:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4323:1:3","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4242:75:3"},"nodeType":"YulFunctionCall","src":"4242:83:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4235:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4423:3:3"}],"functionName":{"name":"store_literal_in_memory_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a","nodeType":"YulIdentifier","src":"4334:88:3"},"nodeType":"YulFunctionCall","src":"4334:93:3"},"nodeType":"YulExpressionStatement","src":"4334:93:3"},{"nodeType":"YulAssignment","src":"4436:18:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4447:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4452:1:3","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:3"},"nodeType":"YulFunctionCall","src":"4443:11:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4436:3:3"}]}]},"name":"abi_encode_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4213:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4221:3:3","type":""}],"src":"4062:398:3"},{"body":{"nodeType":"YulBlock","src":"4654:191:3","statements":[{"nodeType":"YulAssignment","src":"4665:154:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4815:3:3"}],"functionName":{"name":"abi_encode_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4672:141:3"},"nodeType":"YulFunctionCall","src":"4672:147:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4665:3:3"}]},{"nodeType":"YulAssignment","src":"4829:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"4836:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4829:3:3"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4641:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4650:3:3","type":""}],"src":"4466:379:3"},{"body":{"nodeType":"YulBlock","src":"4957:62:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4979:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4987:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4975:3:3"},"nodeType":"YulFunctionCall","src":"4975:14:3"},{"hexValue":"6661696c656420746f2073656e6420455448","kind":"string","nodeType":"YulLiteral","src":"4991:20:3","type":"","value":"failed to send ETH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4968:6:3"},"nodeType":"YulFunctionCall","src":"4968:44:3"},"nodeType":"YulExpressionStatement","src":"4968:44:3"}]},"name":"store_literal_in_memory_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4949:6:3","type":""}],"src":"4851:168:3"},{"body":{"nodeType":"YulBlock","src":"5171:220:3","statements":[{"nodeType":"YulAssignment","src":"5181:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5247:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5252:2:3","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5188:58:3"},"nodeType":"YulFunctionCall","src":"5188:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5181:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5353:3:3"}],"functionName":{"name":"store_literal_in_memory_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da","nodeType":"YulIdentifier","src":"5264:88:3"},"nodeType":"YulFunctionCall","src":"5264:93:3"},"nodeType":"YulExpressionStatement","src":"5264:93:3"},{"nodeType":"YulAssignment","src":"5366:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5377:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5382:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5373:3:3"},"nodeType":"YulFunctionCall","src":"5373:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5366:3:3"}]}]},"name":"abi_encode_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5159:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5167:3:3","type":""}],"src":"5025:366:3"},{"body":{"nodeType":"YulBlock","src":"5568:248:3","statements":[{"nodeType":"YulAssignment","src":"5578:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5590:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5601:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5586:3:3"},"nodeType":"YulFunctionCall","src":"5586:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5578:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5636:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5621:3:3"},"nodeType":"YulFunctionCall","src":"5621:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5644:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5650:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5640:3:3"},"nodeType":"YulFunctionCall","src":"5640:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5614:6:3"},"nodeType":"YulFunctionCall","src":"5614:47:3"},"nodeType":"YulExpressionStatement","src":"5614:47:3"},{"nodeType":"YulAssignment","src":"5670:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5804:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5678:124:3"},"nodeType":"YulFunctionCall","src":"5678:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5670:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5548:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5563:4:3","type":""}],"src":"5397:419:3"},{"body":{"nodeType":"YulBlock","src":"5866:147:3","statements":[{"nodeType":"YulAssignment","src":"5876:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5899:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5881:17:3"},"nodeType":"YulFunctionCall","src":"5881:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5876:1:3"}]},{"nodeType":"YulAssignment","src":"5910:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5933:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5915:17:3"},"nodeType":"YulFunctionCall","src":"5915:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5910:1:3"}]},{"nodeType":"YulAssignment","src":"5944:16:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5955:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"5958:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:3"},"nodeType":"YulFunctionCall","src":"5951:9:3"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5944:3:3"}]},{"body":{"nodeType":"YulBlock","src":"5984:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5986:16:3"},"nodeType":"YulFunctionCall","src":"5986:18:3"},"nodeType":"YulExpressionStatement","src":"5986:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5976:1:3"},{"name":"sum","nodeType":"YulIdentifier","src":"5979:3:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5973:2:3"},"nodeType":"YulFunctionCall","src":"5973:10:3"},"nodeType":"YulIf","src":"5970:36:3"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5853:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"5856:1:3","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5862:3:3","type":""}],"src":"5822:191:3"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16d59be81b7a8951797c3c168116b0901a08a2d4ed98e9b44f53b2431963ec10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_f43e5b8e9fbda3e9c08f71edc309a51e78055e79ffdfe551dfaf4d6deea2e39a_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c8db71397f1b3afedfd3d930905aeb58bdb6e44b7aa9edb0602fcfa0f20f7da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061003f5760003560e01c806325caa2621461004457806327e235e31461006f5780632e1a7d4d146100ac578063d0e30db0146100d5575b600080fd5b34801561005057600080fd5b506100596100df565b60405161006691906102f5565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610373565b6100e7565b6040516100a391906102f5565b60405180910390f35b3480156100b857600080fd5b506100d360048036038101906100ce91906103cc565b6100ff565b005b6100dd610285565b005b600047905090565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017790610456565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ce91906104a5565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516101fb90610530565b60006040518083038185875af1925050503d8060008114610238576040519150601f19603f3d011682016040523d82523d6000602084013e61023d565b606091505b5050905080610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610591565b60405180910390fd5b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d391906105b1565b92505081905550565b6000819050919050565b6102ef816102dc565b82525050565b600060208201905061030a60008301846102e6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034082610315565b9050919050565b61035081610335565b811461035b57600080fd5b50565b60008135905061036d81610347565b92915050565b60006020828403121561038957610388610310565b5b60006103978482850161035e565b91505092915050565b6103a9816102dc565b81146103b457600080fd5b50565b6000813590506103c6816103a0565b92915050565b6000602082840312156103e2576103e1610310565b5b60006103f0848285016103b7565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b60006104406010836103f9565b915061044b8261040a565b602082019050919050565b6000602082019050818103600083015261046f81610433565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104b0826102dc565b91506104bb836102dc565b92508282039050818111156104d3576104d2610476565b5b92915050565b600081905092915050565b7f53656e7400000000000000000000000000000000000000000000000000000000600082015250565b600061051a6004836104d9565b9150610525826104e4565b600482019050919050565b600061053b8261050d565b9150819050919050565b7f6661696c656420746f2073656e64204554480000000000000000000000000000600082015250565b600061057b6012836103f9565b915061058682610545565b602082019050919050565b600060208201905081810360008301526105aa8161056e565b9050919050565b60006105bc826102dc565b91506105c7836102dc565b92508282019050808211156105df576105de610476565b5b9291505056fea2646970667358221220066e2b598c34e44de682b4b48b9278552387b5720dc934835896bfcc97ffa1c064736f6c63430008100033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25CAA262 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x3CC JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF DUP2 PUSH2 0x2DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340 DUP3 PUSH2 0x315 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x350 DUP2 PUSH2 0x335 JUMP JUMPDEST DUP2 EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH2 0x388 PUSH2 0x310 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP5 DUP3 DUP6 ADD PUSH2 0x35E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x2DC JUMP JUMPDEST DUP2 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C6 DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3E1 PUSH2 0x310 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F0 DUP5 DUP3 DUP6 ADD PUSH2 0x3B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820657468657200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440 PUSH1 0x10 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x44B DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F DUP2 PUSH2 0x433 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP3 PUSH2 0x2DC JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB DUP4 PUSH2 0x2DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH2 0x4D2 PUSH2 0x476 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x4 DUP4 PUSH2 0x4D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x525 DUP3 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E64204554480000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B PUSH1 0x12 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x586 DUP3 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AA DUP2 PUSH2 0x56E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BC DUP3 PUSH2 0x2DC JUMP JUMPDEST SWAP2 POP PUSH2 0x5C7 DUP4 PUSH2 0x2DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH2 0x476 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH15 0x2B598C34E44DE682B4B48B92785523 DUP8 0xB5 PUSH19 0xDC934835896BFCC97FFA1C064736F6C634300 ADDMOD LT STOP CALLER ","sourceMap":"112:945:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;205:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;475:484;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;345:84;;;:::i;:::-;;965:90;1004:4;1027:21;1020:28;;965:90;:::o;205:40::-;;;;;;;;;;;;;;;;;:::o;475:484::-;654:7;630:8;:20;639:10;630:20;;;;;;;;;;;;;;;;:31;;622:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;783:7;759:8;:20;768:10;759:20;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;853:9;868:10;:15;;891:7;868:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:55;;;925:4;917:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;514:445;475:484;:::o;345:84::-;413:9;389:8;:20;398:10;389:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;345:84::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:169::-;2303:11;2337:6;2332:3;2325:19;2377:4;2372:3;2368:14;2353:29;;2219:169;;;;:::o;2394:166::-;2534:18;2530:1;2522:6;2518:14;2511:42;2394:166;:::o;2566:366::-;2708:3;2729:67;2793:2;2788:3;2729:67;:::i;:::-;2722:74;;2805:93;2894:3;2805:93;:::i;:::-;2923:2;2918:3;2914:12;2907:19;;2566:366;;;:::o;2938:419::-;3104:4;3142:2;3131:9;3127:18;3119:26;;3191:9;3185:4;3181:20;3177:1;3166:9;3162:17;3155:47;3219:131;3345:4;3219:131;:::i;:::-;3211:139;;2938:419;;;:::o;3363:180::-;3411:77;3408:1;3401:88;3508:4;3505:1;3498:15;3532:4;3529:1;3522:15;3549:194;3589:4;3609:20;3627:1;3609:20;:::i;:::-;3604:25;;3643:20;3661:1;3643:20;:::i;:::-;3638:25;;3687:1;3684;3680:9;3672:17;;3711:1;3705:4;3702:11;3699:37;;;3716:18;;:::i;:::-;3699:37;3549:194;;;;:::o;3749:147::-;3850:11;3887:3;3872:18;;3749:147;;;;:::o;3902:154::-;4042:6;4038:1;4030:6;4026:14;4019:30;3902:154;:::o;4062:398::-;4221:3;4242:83;4323:1;4318:3;4242:83;:::i;:::-;4235:90;;4334:93;4423:3;4334:93;:::i;:::-;4452:1;4447:3;4443:11;4436:18;;4062:398;;;:::o;4466:379::-;4650:3;4672:147;4815:3;4672:147;:::i;:::-;4665:154;;4836:3;4829:10;;4466:379;;;:::o;4851:168::-;4991:20;4987:1;4979:6;4975:14;4968:44;4851:168;:::o;5025:366::-;5167:3;5188:67;5252:2;5247:3;5188:67;:::i;:::-;5181:74;;5264:93;5353:3;5264:93;:::i;:::-;5382:2;5377:3;5373:12;5366:19;;5025:366;;;:::o;5397:419::-;5563:4;5601:2;5590:9;5586:18;5578:26;;5650:9;5644:4;5640:20;5636:1;5625:9;5621:17;5614:47;5678:131;5804:4;5678:131;:::i;:::-;5670:139;;5397:419;;;:::o;5822:191::-;5862:3;5881:20;5899:1;5881:20;:::i;:::-;5876:25;;5915:20;5933:1;5915:20;:::i;:::-;5910:25;;5958:1;5955;5951:9;5944:16;;5979:3;5976:1;5973:10;5970:36;;;5986:18;;:::i;:::-;5970:36;5822:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"312600","executionCost":"349","totalCost":"312949"},"external":{"balances(address)":"2814","deposit()":"infinite","getBal()":"317","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"balances(address)":"27e235e3","deposit()":"d0e30db0","getBal()":"25caa262","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TimeLock.sol\":\"DCAProtocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/TimeLock.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract DCAProtocol {\\n    //we mapped the address of the caller balance in the contract\\n    mapping(address => uint) public balances;\\n\\n    // whatever the user deposit is added to msg.value of the sender address we mapped above\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    //we create the fucntion of witdraw\\n    function withdraw(uint _amount) public {\\n        //we create a require arg to make sure the balance of the sender is >= _amount if not ERR\\n        require(balances[msg.sender] >= _amount, \\\"Not enough ether\\\");\\n        //if the amount is availabe we subtract it from the sender\\n        balances[msg.sender] -= _amount;\\n        //True bool is called to confirm the amount\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\\"Sent\\\");\\n        require(sent, \\\"failed to send ETH\\\");\\n    }\\n\\n    function getBal() public view returns (uint) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0x88f5856ca829cc766882163d5896586769613d9cb06dff8bf51c47d6cfa05119\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":141,"contract":"contracts/TimeLock.sol:DCAProtocol","label":"balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}